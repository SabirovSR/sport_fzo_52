version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: fok_bot_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-fok_bot}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - fok_network

  redis:
    image: redis:7.2-alpine
    container_name: fok_bot_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fok_network

  bot:
    build: .
    container_name: fok_bot
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
      - ./exports:/app/exports
    networks:
      - fok_network
    command: python main.py

  celery_worker:
    build: .
    container_name: fok_bot_celery_worker
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
      - ./exports:/app/exports
    networks:
      - fok_network
    command: celery -A app.tasks.celery_app worker --loglevel=info --concurrency=4

  celery_beat:
    build: .
    container_name: fok_bot_celery_beat
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
      - ./exports:/app/exports
    networks:
      - fok_network
    command: celery -A app.tasks.celery_app beat --loglevel=info

volumes:
  mongodb_data:
  redis_data:

networks:
  fok_network:
    driver: bridge