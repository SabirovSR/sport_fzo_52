global
    daemon
    maxconn 4096
    log stdout local0 info
    
    # SSL/TLS settings
    ssl-default-bind-ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    ssl-default-server-ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option httplog
    option dontlognull
    option redispatch
    retries 3
    
    # Health checks
    option httpchk GET /health
    http-check expect status 200

# Stats interface
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE

# HTTP frontend (redirect to HTTPS)
frontend http_frontend
    bind *:80
    redirect scheme https code 301 if !{ ssl_fc }

# HTTPS frontend
frontend https_frontend
    bind *:443 ssl crt /etc/ssl/certs/cert.pem
    
    # Security headers
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request reject if { sc_http_req_rate(0) gt 20 }
    
    # Webhook routing
    acl is_webhook path_beg /webhook
    acl is_health path_beg /health
    acl is_metrics path_beg /metrics
    
    use_backend webhook_backend if is_webhook
    use_backend health_backend if is_health
    use_backend metrics_backend if is_metrics
    default_backend webhook_backend

# Webhook backend (bot instances)
backend webhook_backend
    balance roundrobin
    option httpchk GET /health
    
    server bot1 bot-1:8001 check
    server bot2 bot-2:8002 check
    server bot3 bot-3:8003 check

# Health check backend
backend health_backend
    balance roundrobin
    option httpchk GET /health
    
    server bot1 bot-1:8001 check
    server bot2 bot-2:8002 check
    server bot3 bot-3:8003 check

# Metrics backend
backend metrics_backend
    balance roundrobin
    option httpchk GET /health
    
    server bot1 bot-1:8001 check
    server bot2 bot-2:8002 check
    server bot3 bot-3:8003 check