name: Security Scan

on:
  schedule:
    # Run every Sunday at 3 AM UTC
    - cron: '0 3 * * 0'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit semgrep
    
    - name: Run safety check
      run: |
        safety check --json --output safety-report.json
        safety check --short-report
    
    - name: Run bandit security scan
      run: |
        bandit -r app -f json -o bandit-report.json
        bandit -r app -ll
    
    - name: Run Semgrep security scan
      run: |
        semgrep --config=auto app/ --json --output=semgrep-report.json
        semgrep --config=auto app/
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports-${{ github.run_number }}
        path: |
          safety-report.json
          bandit-report.json
          semgrep-report.json
    
    - name: Comment PR with security results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          // Read safety report
          let safetyReport = {};
          try {
            safetyReport = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
          } catch (e) {
            console.log('No safety report found');
          }
          
          // Read bandit report
          let banditReport = {};
          try {
            banditReport = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
          } catch (e) {
            console.log('No bandit report found');
          }
          
          // Create comment
          let comment = '## 🔒 Security Scan Results\n\n';
          
          if (safetyReport.length > 0) {
            comment += '### ⚠️ Safety Vulnerabilities Found\n';
            safetyReport.forEach(vuln => {
              comment += `- **${vuln.package}**: ${vuln.vulnerability}\n`;
            });
            comment += '\n';
          } else {
            comment += '### ✅ No Safety Vulnerabilities Found\n\n';
          }
          
          if (banditReport.results && banditReport.results.length > 0) {
            comment += '### ⚠️ Bandit Security Issues Found\n';
            banditReport.results.forEach(issue => {
              comment += `- **${issue.test_name}** (${issue.severity}): ${issue.issue_text}\n`;
            });
            comment += '\n';
          } else {
            comment += '### ✅ No Bandit Security Issues Found\n\n';
          }
          
          comment += '---\n*This comment was automatically generated by the security scan workflow.*';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Notify security team
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#security'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      if: failure()